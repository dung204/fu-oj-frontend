/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as NotAuthRouteImport } from './routes/_not-auth'
import { Route as NotAuthIndexRouteImport } from './routes/_not-auth/index'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as NotAuthProfileIndexRouteImport } from './routes/_not-auth/profile.index'
import { Route as NotAuthPostsNewIndexRouteImport } from './routes/_not-auth/posts/new.index'
import { Route as NotAuthPostsMeIndexRouteImport } from './routes/_not-auth/posts/me.index'
import { Route as NotAuthPostsPostIdIndexRouteImport } from './routes/_not-auth/posts/$postId.index'
import { Route as NotAuthPostsPostIdEditRouteImport } from './routes/_not-auth/posts/$postId.edit'

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const NotAuthRoute = NotAuthRouteImport.update({
  id: '/_not-auth',
  getParentRoute: () => rootRouteImport,
} as any)
const NotAuthIndexRoute = NotAuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => NotAuthRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const NotAuthProfileIndexRoute = NotAuthProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => NotAuthRoute,
} as any)
const NotAuthPostsNewIndexRoute = NotAuthPostsNewIndexRouteImport.update({
  id: '/posts/new/',
  path: '/posts/new/',
  getParentRoute: () => NotAuthRoute,
} as any)
const NotAuthPostsMeIndexRoute = NotAuthPostsMeIndexRouteImport.update({
  id: '/posts/me/',
  path: '/posts/me/',
  getParentRoute: () => NotAuthRoute,
} as any)
const NotAuthPostsPostIdIndexRoute = NotAuthPostsPostIdIndexRouteImport.update({
  id: '/posts/$postId/',
  path: '/posts/$postId/',
  getParentRoute: () => NotAuthRoute,
} as any)
const NotAuthPostsPostIdEditRoute = NotAuthPostsPostIdEditRouteImport.update({
  id: '/posts/$postId/edit',
  path: '/posts/$postId/edit',
  getParentRoute: () => NotAuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof NotAuthIndexRoute
  '/profile': typeof NotAuthProfileIndexRoute
  '/posts/$postId/edit': typeof NotAuthPostsPostIdEditRoute
  '/posts/$postId': typeof NotAuthPostsPostIdIndexRoute
  '/posts/me': typeof NotAuthPostsMeIndexRoute
  '/posts/new': typeof NotAuthPostsNewIndexRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof NotAuthIndexRoute
  '/profile': typeof NotAuthProfileIndexRoute
  '/posts/$postId/edit': typeof NotAuthPostsPostIdEditRoute
  '/posts/$postId': typeof NotAuthPostsPostIdIndexRoute
  '/posts/me': typeof NotAuthPostsMeIndexRoute
  '/posts/new': typeof NotAuthPostsNewIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_not-auth': typeof NotAuthRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/_not-auth/': typeof NotAuthIndexRoute
  '/_not-auth/profile/': typeof NotAuthProfileIndexRoute
  '/_not-auth/posts/$postId/edit': typeof NotAuthPostsPostIdEditRoute
  '/_not-auth/posts/$postId/': typeof NotAuthPostsPostIdIndexRoute
  '/_not-auth/posts/me/': typeof NotAuthPostsMeIndexRoute
  '/_not-auth/posts/new/': typeof NotAuthPostsNewIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/profile'
    | '/posts/$postId/edit'
    | '/posts/$postId'
    | '/posts/me'
    | '/posts/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/profile'
    | '/posts/$postId/edit'
    | '/posts/$postId'
    | '/posts/me'
    | '/posts/new'
  id:
    | '__root__'
    | '/_not-auth'
    | '/auth'
    | '/auth/login'
    | '/auth/register'
    | '/_not-auth/'
    | '/_not-auth/profile/'
    | '/_not-auth/posts/$postId/edit'
    | '/_not-auth/posts/$postId/'
    | '/_not-auth/posts/me/'
    | '/_not-auth/posts/new/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  NotAuthRoute: typeof NotAuthRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_not-auth': {
      id: '/_not-auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NotAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_not-auth/': {
      id: '/_not-auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof NotAuthIndexRouteImport
      parentRoute: typeof NotAuthRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_not-auth/profile/': {
      id: '/_not-auth/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof NotAuthProfileIndexRouteImport
      parentRoute: typeof NotAuthRoute
    }
    '/_not-auth/posts/new/': {
      id: '/_not-auth/posts/new/'
      path: '/posts/new'
      fullPath: '/posts/new'
      preLoaderRoute: typeof NotAuthPostsNewIndexRouteImport
      parentRoute: typeof NotAuthRoute
    }
    '/_not-auth/posts/me/': {
      id: '/_not-auth/posts/me/'
      path: '/posts/me'
      fullPath: '/posts/me'
      preLoaderRoute: typeof NotAuthPostsMeIndexRouteImport
      parentRoute: typeof NotAuthRoute
    }
    '/_not-auth/posts/$postId/': {
      id: '/_not-auth/posts/$postId/'
      path: '/posts/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof NotAuthPostsPostIdIndexRouteImport
      parentRoute: typeof NotAuthRoute
    }
    '/_not-auth/posts/$postId/edit': {
      id: '/_not-auth/posts/$postId/edit'
      path: '/posts/$postId/edit'
      fullPath: '/posts/$postId/edit'
      preLoaderRoute: typeof NotAuthPostsPostIdEditRouteImport
      parentRoute: typeof NotAuthRoute
    }
  }
}

interface NotAuthRouteChildren {
  NotAuthIndexRoute: typeof NotAuthIndexRoute
  NotAuthProfileIndexRoute: typeof NotAuthProfileIndexRoute
  NotAuthPostsPostIdEditRoute: typeof NotAuthPostsPostIdEditRoute
  NotAuthPostsPostIdIndexRoute: typeof NotAuthPostsPostIdIndexRoute
  NotAuthPostsMeIndexRoute: typeof NotAuthPostsMeIndexRoute
  NotAuthPostsNewIndexRoute: typeof NotAuthPostsNewIndexRoute
}

const NotAuthRouteChildren: NotAuthRouteChildren = {
  NotAuthIndexRoute: NotAuthIndexRoute,
  NotAuthProfileIndexRoute: NotAuthProfileIndexRoute,
  NotAuthPostsPostIdEditRoute: NotAuthPostsPostIdEditRoute,
  NotAuthPostsPostIdIndexRoute: NotAuthPostsPostIdIndexRoute,
  NotAuthPostsMeIndexRoute: NotAuthPostsMeIndexRoute,
  NotAuthPostsNewIndexRoute: NotAuthPostsNewIndexRoute,
}

const NotAuthRouteWithChildren =
  NotAuthRoute._addFileChildren(NotAuthRouteChildren)

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  NotAuthRoute: NotAuthRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
